/// Grid system
//
// Generate semantic grid columns with these mixins.

// For each breakpoint, define the gutter width of the container in a media query
@mixin make-full-container($gutter-widths: $grid-gutter-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $gutter in $gutter-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      width: 100%;
      padding-right: $gutter/2;
      padding-left: $gutter/2;
      margin-right: auto;
      margin-left: auto;
    }
  }
}

// For each breakpoint, define the gutter width of the container in a media query
@mixin make-container($gutter-widths: $grid-gutter-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $gutter in $gutter-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      width: 100%;
      padding-right: $gutter;
      padding-left: $gutter;
      margin-right: auto;
      margin-left: auto;
    }
  }
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin make-row($gutter-widths: $grid-gutter-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $gutter in $gutter-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      display: flex;
      flex-wrap: wrap;
      margin-right: -$gutter / 2;
      margin-left: -$gutter / 2;
    }
  }
}

@mixin make-col-ready($gutter-widths: $grid-gutter-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $gutter in $gutter-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      position: relative;
      // Prevent columns from becoming too narrow when at smaller grid tiers by
      // always setting `width: 100%;`. This works because we use `flex` values
      // later on to override this initial width.
      width: 100%;
      padding-right: $gutter / 2;
      padding-left: $gutter / 2;
    }
  }
}

@mixin make-col($size, $column: $columns, $breakpoints: $grid-breakpoints) {
  flex: 0 0 percentage($size / $column);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $column);
}

@mixin make-col-offset($size, $column: $columns, $breakpoints: $grid-breakpoints) {
  $num: $size / $column;
  margin-left: if($num == 0, 0, percentage($num));
}
